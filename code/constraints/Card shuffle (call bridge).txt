class card;
  rand enum {H=0,S,C,D} suit;
 rand bit [3:0] rank;
 
 constraint C_rank {
 	rank inside {[1:13]};
 }
endclass
 
class deck ;
	rand card cards[52];
 
	function new ();
		foreach (cards[i])
			cards[i] = new;
	endfunction
 
 
  constraint D {
    foreach(cards[i])
      foreach(cards[j]) {
        if(cards[i].suit == cards[j].suit && i != j)
          cards[i].rank != cards[j].rank;
        if(cards[i].rank == cards[j].rank && i != j)
          cards[i].suit != cards[j].suit;
      }
 
  }
 
  	
 
endclass
 
module test;
        deck shuffle;
        initial begin
          shuffle = new;
          assert (shuffle.randomize());
          foreach(shuffle.cards[i])
            $display("User%0d:%s%0d",i%4+1,shuffle.cards[i].suit,shuffle.cards[i].rank);
        end
endmodule